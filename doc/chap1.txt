  
  [1X1 [33X[0;0YThe I-test[133X[101X
  
  [33X[0;0YThe  I-test  is  an  asphericity  test  that  is not based on a non-positive
  curvature  argument.  If a finite group presentation passes the I-test, then
  the associated 2-complex is diagrammatically reducible (DR),in particular it
  is  aspherical. This test was introduced by Barmak and Minian [BM18, Theorem
  2.6]. The main function of the package is [2XITest[102X ([14X1.1-6[114X).[133X
  
  [33X[0;0YSee SectionsÂ  [14X2.1[114X andÂ [14X2.2[114X for how to install and load the [5XItest[105X package.[133X
  
  
  [1X1.1 [33X[0;0YFunctions for the I-test[133X[101X
  
  [33X[0;0YThe following functions are available:[133X
  
  [1X1.1-1 SubwordMatrix[101X
  
  [29X[2XSubwordMatrix[102X( [3XG[103X ) [32X function
  
  [33X[0;0Y[3XG[103X must be an FpGroup. Returns the subword matrix of [3XG[103X .[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF:=FreeGroup(["x","y","z","w"]);;[127X[104X
    [4X[25Xgap>[125X [27XAssignGeneratorVariables(F);[127X[104X
    [4X[28X#I  Assigned the global variables [ x, y, z, w ][128X[104X
    [4X[25Xgap>[125X [27XG:=F/[x^2*y^2*z^2, x*y*x^-1*z*y*z^-1, w^2*x^-1*w^-1*z];;[127X[104X
    [4X[25Xgap>[125X [27XSubwordMatrix(G);[127X[104X
    [4X[28X[[128X[104X
    [4X[28X[[x^2*y^2*z^2,x*y^2*z^2],[x*y*x^-1*z*y*z^-1,z*y*z^-1 ],[w^-1*z]                         ],[128X[104X
    [4X[28X[[y^2*z^2,y*z^2],        [y*x^-1*z*y*z^-1,y*z^-1 ],    []                               ], [128X[104X
    [4X[28X[[z^2,z],                [z*y*z^-1,<identity ...>],    [z]                              ], [128X[104X
    [4X[28X[[],                     [],                           [w^2*x^-1*w^-1*z,w*x^-1*w^-1*z,z]][128X[104X
    [4X[28X][128X[104X
  [4X[32X[104X
  
  [1X1.1-2 WeightMatrix[101X
  
  [29X[2XWeightMatrix[102X( [3XG[103X, [3Xv[103X ) [32X function
  
  [33X[0;0Y[3XG[103X must be an FpGroup, [3Xv[103X a vector orthogonal to [3Xq(r)[103X for each relator [3Xr[103X of [3XG[103X.
  Returns the weight matrix of [3XG[103X .[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XM:=WeightMatrix(G,[1,0,-1,2]);[127X[104X
    [4X[28X[ [128X[104X
    [4X[28X[ [0,-1],  [0,0],  [-3]      ],[128X[104X
    [4X[28X[ [-2,-2], [-1,1], []        ],[128X[104X
    [4X[28X[ [-2,-1], [0,0],  [-1]      ],[128X[104X
    [4X[28X[ [],      [],     [0,-2,-1] ][128X[104X
    [4X[28X][128X[104X
  [4X[32X[104X
  
  [1X1.1-3 IsGoodMatrix[101X
  
  [29X[2XIsGoodMatrix[102X( [3XM[103X ) [32X function
  
  [33X[0;0YReturns [9Xtrue[109X if the matrix [3XM[103X is [13Xgood[113X in the sense of [BM18, Definition 2.5].[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XIsGoodMatrix(M);[127X[104X
    [4X[28X#columns:[ 2, 1, 3 ], rows: [ 2, 1, 4 ][128X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X1.1-4 ITestVector[101X
  
  [29X[2XITestVector[102X( [3XG[103X, [3Xv[103X ) [32X function
  
  [33X[0;0Y[3XG[103X must be an FpGroup. The vector [3Xv[103X must be orthogonal to the exponent matrix
  of  the  presentation defining [3XG[103X. Returns [9Xtrue[109X if [3XG[103X satisfies the I-test for
  [3Xv[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XITestVector(G,[1,0,-1,2]);[127X[104X
    [4X[28X# columns:[ 2, 1, 3 ], rows: [ 2, 1, 4 ][128X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X1.1-5 ITestSimplex[101X
  
  [29X[2XITestSimplex[102X( [3XG[103X ) [32X function
  
  [33X[0;0Y[3XG[103X  must  be  an FpGroup. Returns a vector [3Xv[103X such that [3XG[103X satisfies the I-test
  for  [3Xv[103X  or  [9XFalse[109X  if  there  is no such vector. It works by solving lots of
  linear programs using the package [5XPolymaking[105X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF:=FreeGroup(["x","y","z"]);;[127X[104X
    [4X[25Xgap>[125X [27XAssignGeneratorVariables(F);;[127X[104X
    [4X[25Xgap>[125X [27XG:=F/[x*z*x^-1*y*z*y^-1*z^-1*y^-1, x*y^-1*x^-1*y^-1*x*y];;[127X[104X
    [4X[25Xgap>[125X [27XITestSimplex(G);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  [1X1.1-6 ITest[101X
  
  [29X[2XITest[102X( [3XG[103X[, [3Xn[103X] ) [32X function
  
  [33X[0;0Y[3XG[103X  must  be  an FpGroup. Returns a vector [3Xv[103X such that [3XG[103X satisfies the I-test
  for  [3Xv[103X  or  [9XFalse[109X if there is no such vector. First tries a number of random
  vectors  and if none of these vectors works it uses [10XITestSimplex[110X. The number
  of vectors tried can be specified by the optional parameter [3Xn[103X and by default
  is set to [22X10000[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF:=FreeGroup(8);;[127X[104X
    [4X[25Xgap>[125X [27XAssignGeneratorVariables(F);;[127X[104X
    [4X[28X#I  Assigned the global variables [ f1, f2, f3, f4, f5, f6, f7, f8 ][128X[104X
    [4X[25Xgap>[125X [27XR:=[[127X[104X
    [4X[25X>[125X [27Xf6^-1*f4^-1*f7^-1*f1*f7*f5^-1*f3^-1,[127X[104X
    [4X[25X>[125X [27Xf3^-1*f1^-1*f5*f6*f8^-1*f6*f3^-1*f2, [127X[104X
    [4X[25X>[125X [27Xf1*f7^-1*f3^-1*f8^-1*f7*f2^2*f8^-1*f7^-1*f6^-1, [127X[104X
    [4X[25X>[125X [27Xf7^-1*f3*f8^-1*f1*f2*f3*f8^2*f2,[127X[104X
    [4X[25X>[125X [27Xf4^-1*f1*f2^-1*f5^-1*f2[127X[104X
    [4X[25X>[125X [27X];;[127X[104X
    [4X[25Xgap>[125X [27XG:=F/R;;[127X[104X
    [4X[25Xgap>[125X [27XITest(G);[127X[104X
    [4X[28X# columns:[ 1, 4, 3, 5, 2 ], rows: [ 1, 2, 3, 4, 6 ][128X[104X
    [4X[28X[ 237, 694, 243, -116, 353, -243, 1949, -162 ][128X[104X
    [4X[25Xgap>[125X [27XF:=FreeGroup(["x","y","z"]);;[127X[104X
    [4X[25Xgap>[125X [27XAssignGeneratorVariables(F);;[127X[104X
    [4X[25Xgap>[125X [27XG:=F/[x*z*x^-1*y*z*y^-1*z^-1*y^-1, x*y^-1*x^-1*y^-1*x*y];;[127X[104X
    [4X[25Xgap>[125X [27XITest(G);[127X[104X
    [4X[28X# Tried 10000 random vectors without success.[128X[104X
    [4X[28X# Now I am trying with every possible vector...[128X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
